{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/rael06/restfull-api/1.0.0"
  } ],
  "info" : {
    "description" : "This is a simple API",
    "version" : "1.0.0",
    "title" : "Simple Inventory API",
    "contact" : {
      "email" : "rael.calitro@ynov.com"
    },
    "license" : {
      "name" : "MIT"
    }
  },
  "tags" : [ {
    "name" : "users",
    "description" : "Operations available to users"
  }, {
    "name" : "servers",
    "description" : "Operations available to servers"
  }, {
    "name" : "channels",
    "description" : "Operations available to channels"
  }, {
    "name" : "messages",
    "description" : "Operations available to messages"
  }, {
    "name" : "admins",
    "description" : "Operations available to admin users"
  } ],
  "paths" : {
    "/users" : {
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "searches inventory",
        "operationId" : "searchInventory",
        "description" : "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "searchString",
          "description" : "pass an optional search string for looking up inventory",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "maximum" : 50
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserCreateDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "users" ],
        "summary" : "creates a user",
        "operationId" : "createUser",
        "description" : "Creates a user in the system",
        "responses" : {
          "201" : {
            "description" : "user created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserReadDto"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCreateDto"
              }
            }
          },
          "description" : "user to add"
        }
      }
    },
    "/servers" : {
      "post" : {
        "tags" : [ "servers" ],
        "summary" : "creates a server",
        "operationId" : "createServer",
        "description" : "Creates a server",
        "responses" : {
          "201" : {
            "description" : "server created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerReadDto"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "401" : {
            "description" : "user not authenticated"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerCreateDto"
              }
            }
          },
          "description" : "server to add"
        }
      }
    },
    "/servers/{serverId}" : {
      "patch" : {
        "tags" : [ "servers" ],
        "summary" : "patches a server",
        "operationId" : "patchServer",
        "description" : "Patches a server",
        "responses" : {
          "200" : {
            "description" : "server updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerReadDto"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "403" : {
            "description" : "user can only update his servers"
          },
          "404" : {
            "description" : "server not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "serverId",
          "description" : "The id of the server you want to add a user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerUpdateDto"
              }
            }
          }
        }
      }
    },
    "/servers/{serverId}/users" : {
      "post" : {
        "tags" : [ "servers" ],
        "summary" : "adds a user to the server",
        "operationId" : "addUserToServer",
        "description" : "Adds a user to the server",
        "responses" : {
          "201" : {
            "description" : "user added to the server"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "404" : {
            "description" : "server not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "serverId",
          "description" : "The id of the server you want to add a user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerUserCreateDto"
              }
            }
          },
          "description" : "user to add"
        }
      }
    },
    "/servers/{serverId}/users/{userId}" : {
      "patch" : {
        "tags" : [ "servers" ],
        "summary" : "update user role in the server",
        "operationId" : "updateServerUserRole",
        "description" : "Updates user role in the server",
        "responses" : {
          "200" : {
            "description" : "user role in the server updated"
          },
          "400" : {
            "description" : "Something went wrong, try again later"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "403" : {
            "description" : "user can only update role of users from his servers"
          },
          "404" : {
            "description" : "server or user not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "serverId",
          "description" : "The id of the server you want to update a user role from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userId",
          "description" : "The id of the user you want to update the role",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "delete" : {
        "tags" : [ "servers" ],
        "summary" : "deletes a user of the server",
        "operationId" : "deleteServerUser",
        "description" : "Deletes a user of the server",
        "responses" : {
          "204" : {
            "description" : "user deleted of the server"
          },
          "400" : {
            "description" : "Something went wrong, try again later"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "403" : {
            "description" : "user can only delete users from his servers"
          },
          "404" : {
            "description" : "server or user not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "serverId",
          "description" : "The id of the server you want to delete a user from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "userId",
          "description" : "The id of the user you want to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      }
    },
    "/servers/{serverId}/channels" : {
      "post" : {
        "tags" : [ "servers" ],
        "summary" : "adds a channel to the server",
        "operationId" : "addChannelToServer",
        "description" : "Adds a channel to the server",
        "responses" : {
          "201" : {
            "description" : "channel added to the server",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChannelReadDto"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "403" : {
            "description" : "user can only create channels on his servers"
          },
          "404" : {
            "description" : "server not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "serverId",
          "description" : "The id of the server you want to add a channel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelCreateDto"
              }
            }
          },
          "description" : "channel to add"
        }
      }
    },
    "/channels/{channelId}/messages" : {
      "post" : {
        "tags" : [ "channels" ],
        "summary" : "creates a message in the channel",
        "operationId" : "createMessageToChannel",
        "description" : "Creates a message to the channel",
        "responses" : {
          "201" : {
            "description" : "message created in the channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageReadDto"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "403" : {
            "description" : "user can only create messages on a subscribed server"
          },
          "404" : {
            "description" : "channel not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "channelId",
          "description" : "The id of the channel you want to add the message",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageCreateDto"
              }
            }
          },
          "description" : "message to add"
        }
      },
      "get" : {
        "tags" : [ "channels" ],
        "summary" : "get messages of the channel",
        "operationId" : "getMessagesOfChannel",
        "description" : "Gets all messages of the channel",
        "responses" : {
          "200" : {
            "description" : "messages of the channel",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MessageReadDto"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "something went wrong, please retry later"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "403" : {
            "description" : "user can only get messages of channels on subscribed servers"
          },
          "404" : {
            "description" : "channel not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "channelId",
          "description" : "The id of the channel you want to add the message",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      }
    },
    "/channels/{channelId}" : {
      "patch" : {
        "tags" : [ "channels" ],
        "summary" : "patches a channel",
        "operationId" : "patchChannel",
        "description" : "Patches a channel",
        "responses" : {
          "200" : {
            "description" : "channel updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChannelReadDto"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "403" : {
            "description" : "user can only edit his channels"
          },
          "404" : {
            "description" : "channel not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "channelId",
          "description" : "The id of the channel you want to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChannelUpdateDto"
              }
            }
          },
          "description" : "channel to update"
        }
      },
      "delete" : {
        "tags" : [ "channels" ],
        "summary" : "deletes a channel",
        "operationId" : "deleteChannel",
        "description" : "deletes a channel",
        "responses" : {
          "204" : {
            "description" : "channel deleted"
          },
          "400" : {
            "description" : "Something went wrong, please try again later"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "403" : {
            "description" : "user can only delete his channels"
          },
          "404" : {
            "description" : "channel not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "channelId",
          "description" : "The id of the channel you want to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      }
    },
    "/messages/{messageId}" : {
      "patch" : {
        "tags" : [ "messages" ],
        "summary" : "updates a message",
        "operationId" : "upadateMessage",
        "description" : "updates a message",
        "responses" : {
          "200" : {
            "description" : "message updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessageReadDto"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "403" : {
            "description" : "user can only update his messages"
          },
          "404" : {
            "description" : "message not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "messageId",
          "description" : "The id of the message you want to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessageUpdateDto"
              }
            }
          },
          "description" : "new content of the message"
        }
      },
      "delete" : {
        "tags" : [ "messages" ],
        "summary" : "deletes a message",
        "operationId" : "deleteMessage",
        "description" : "deletes a message",
        "responses" : {
          "204" : {
            "description" : "message deleted"
          },
          "400" : {
            "description" : "Something went wrong, please try again later"
          },
          "401" : {
            "description" : "user not authenticated"
          },
          "403" : {
            "description" : "user can only delete his messages"
          },
          "404" : {
            "description" : "message not found"
          }
        },
        "parameters" : [ {
          "in" : "path",
          "name" : "messageId",
          "description" : "The id of the message you want to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserReadDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "a00000e0-aaa0-000a-0000-00e00aa00e00"
          },
          "username" : {
            "type" : "string",
            "example" : "my-pseudo"
          },
          "servers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServerReadDto"
            }
          },
          "creationDate" : {
            "type" : "string",
            "example" : "2021-12-12T17:47:00+0200"
          }
        }
      },
      "UserCreateDto" : {
        "type" : "object",
        "required" : [ "username" ],
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "my-pseudo"
          }
        }
      },
      "ServerReadDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "a00000e0-aaa0-000a-0000-00e00aa00e00"
          },
          "name" : {
            "type" : "string",
            "example" : "my-server"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServerUserReadDto"
            }
          },
          "creationDate" : {
            "type" : "string",
            "example" : "2021-12-12T17:47:00+0200"
          },
          "updateDate" : {
            "type" : "string",
            "example" : "2021-12-12T17:47:00+0200"
          }
        }
      },
      "ServerCreateDto" : {
        "type" : "object",
        "required" : [ "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "my-server"
          }
        }
      },
      "ServerUpdateDto" : {
        "type" : "object",
        "required" : [ "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "my-updated-channel-name"
          }
        }
      },
      "ServerUserReadDto" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string",
            "example" : "a00000e0-aaa0-000a-0000-00e00aa00e00"
          },
          "isAdmin" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "ServerUserCreateDto" : {
        "type" : "object",
        "required" : [ "userId", "isAdmin" ],
        "properties" : {
          "userId" : {
            "type" : "string",
            "example" : "a00000e0-aaa0-000a-0000-00e00aa00e00"
          },
          "isAdmin" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "ChannelReadDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "a00000e0-aaa0-000a-0000-00e00aa00e00"
          },
          "serverId" : {
            "type" : "string",
            "example" : "a00000e0-aaa0-000a-0000-00e00aa00e00"
          },
          "name" : {
            "type" : "string",
            "example" : "my-channel"
          },
          "creationDate" : {
            "type" : "string",
            "example" : "2021-12-12T17:47:00+0200"
          },
          "updateDate" : {
            "type" : "string",
            "example" : "2021-12-12T17:47:00+0200"
          }
        }
      },
      "ChannelCreateDto" : {
        "type" : "object",
        "required" : [ "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "my-channel"
          }
        }
      },
      "ChannelUpdateDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "my-channel"
          }
        }
      },
      "MessageReadDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "a00000e0-aaa0-000a-0000-00e00aa00e00"
          },
          "userId" : {
            "type" : "string",
            "example" : "a00000e0-aaa0-000a-0000-00e00aa00e00"
          },
          "channelId" : {
            "type" : "string",
            "example" : "a00000e0-aaa0-000a-0000-00e00aa00e00"
          },
          "content" : {
            "type" : "string",
            "example" : "my-content"
          },
          "creationDate" : {
            "type" : "string",
            "example" : "2021-12-12T17:47:00+0200"
          },
          "updateDate" : {
            "type" : "string",
            "example" : "2021-12-12T17:47:00+0200"
          }
        }
      },
      "MessageCreateDto" : {
        "type" : "object",
        "required" : [ "content" ],
        "properties" : {
          "content" : {
            "type" : "string",
            "example" : "my-content"
          }
        }
      },
      "MessageUpdateDto" : {
        "type" : "object",
        "required" : [ "content" ],
        "properties" : {
          "content" : {
            "type" : "string",
            "example" : "my-new-content"
          }
        }
      }
    }
  }
}